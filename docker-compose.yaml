version: '3'
services:
  ds-notebook:
    build:
      context: ./installation/
      dockerfile: jupyter
    volumes:
      - "./jupyter/:/home/jovyan/work/"
    ports:
      - 8888:8888
    user: root
    environment:
      CHOWN_HOME: "yes"
      CHOWN_HOME_OPTS: -R
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      ARTIFACT_ROOT: ${ARTIFACT_ROOT}
      MLFLOW_SITE_URL: ${MLFLOW_SITE_URL}
      MLFLOW_S3_ENDPOINT_URL: ${MLFLOW_S3_ENDPOINT_URL}
      AWS_ACCESS_KEY_ID: ${MINIO_ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${MINIO_SECRET_KEY}
      PREFECT_API_URL: ${PREFECT_AGENT_API_URL}
    container_name: "jupyter_notebook"
    command: "start-notebook.sh --NotebookApp.token='' --NotebookApp.password=''"

  prefect-server:
    image: prefecthq/prefect:2.10.13-python3.11
    container_name: "prefect_server"
    volumes:
      - ./volumes/prefect:/root/.prefect
    entrypoint: ["/opt/prefect/entrypoint.sh", "prefect", "server", "start"]
    environment:
      PREFECT_UI_URL: ${PREFECT_UI_URL}
      PREFECT_API_URL: ${PREFECT_API_URL}
      PREFECT_SERVER_API_HOST: ${PREFECT_SERVER_API_HOST}
      PREFECT_API_DATABASE_CONNECTION_URL: ${PREFECT_API_DATABASE_CONNECTION_URL}
      EXTRA_PIP_PACKAGES: fsspec
    ports:
      - 4200:4200
    depends_on:
      - postgres

  prefect-agent:
    build:
      context: ./installation/
      dockerfile: prefect
    container_name: "prefect_agent"
    entrypoint: ["prefect", "agent", "start", "-q", "red-wine"]
    environment:
      MLFLOW_SITE_URL: ${MLFLOW_SITE_URL}
      MLFLOW_S3_ENDPOINT_URL: ${MLFLOW_S3_ENDPOINT_URL}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      AWS_ACCESS_KEY_ID: ${MINIO_ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${MINIO_SECRET_KEY}
      PREFECT_API_URL: ${PREFECT_AGENT_API_URL}
      EXTRA_PIP_PACKAGES: fsspec
    depends_on:
      - prefect-server

  mlflow:
    build:
      context: ./installation/
      dockerfile: mlflow
    container_name: "mlflow_server"
    ports:
      - 5000:5000
    environment:
      BACKEND_URI: ${BACKEND_URI}
      MLFLOW_S3_ENDPOINT_URL: ${MLFLOW_S3_ENDPOINT_URL}
      ARTIFACT_ROOT: ${ARTIFACT_ROOT}
      AWS_ACCESS_KEY_ID: ${MINIO_ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${MINIO_SECRET_KEY}
    depends_on:
      - postgres
      - minio

  postgres:
    image: postgres:14
    container_name: "mlflow_postgres"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_MULTIPLE_DATABASES: ${PREFECT_DB_USER}:${PREFECT_DB_PASSWORD}
    volumes:
      - ./installation/postgres_init/create-multi-db.sh:/docker-entrypoint-initdb.d/create-multi-db.sh
      - ./volumes/postgres:/var/lib/postgresql/data
    expose:
      - 5432

  minio:
    image: minio/minio
    container_name: "mlflow_minio"
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - "./volumes/minio:/data"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    command: server --console-address ":9001" /data

  deployment:
    build:
      context: ./installation/
      dockerfile: deployment
    container_name: "deployment"
    ports:
      - ${DEPLOYMENT_PORT}:${DEPLOYMENT_PORT}
    environment:
      DEPLOYMENT_PORT: ${DEPLOYMENT_PORT}
      MLFLOW_SITE_URL: ${MLFLOW_SITE_URL}
    depends_on:
      - mlflow
      - minio

volumes:
  ds-notebook:
    driver: local
  prefect-server:
    driver: local
  postgres:
    driver: local
  minio:
    driver: local